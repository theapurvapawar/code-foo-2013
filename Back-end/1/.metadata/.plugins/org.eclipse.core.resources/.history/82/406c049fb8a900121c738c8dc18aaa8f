import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.DocumentBuilder;
import org.xml.sax.SAXException;
import org.xml.sax.SAXParseException; 

public class FamilyTreeParser {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		String fileName = "/home/blackdragon/code-foo-2013/Back-end/1/familytree.xml";
		DocumentBuilderFactory docBuilderFactory = DocumentBuilderFactory.newInstance();
        DocumentBuilder docBuilder = docBuilderFactory.newDocumentBuilder();
        Document doc = docBuilder.parse (new File(fileName));
        
        
        
        // normalize text representation
        doc.getDocumentElement ().normalize ();
        //System.out.println ("Root element : " + 
             //doc.getDocumentElement().getNodeName());


        NodeList listOfPlayers = doc.getElementsByTagName("player");            
        //System.out.println("Total Players : " + listOfPlayers.getLength());

        for(int s=0; s<listOfPlayers.getLength() ; s++){


            Node firstPersonNode = listOfPlayers.item(s);
            if(firstPersonNode.getNodeType() == Node.ELEMENT_NODE){


                Element firstPersonElement = (Element)firstPersonNode;

                //-------
                NodeList NameList = firstPersonElement.getElementsByTagName("name");
                Element nameElement = (Element)NameList.item(0);

                NodeList textFNList = nameElement.getChildNodes();
                String name = (textFNList.item(0)).getNodeValue().trim();

                //-------
                NodeList scoreList = firstPersonElement.getElementsByTagName("score");
                Element scoreElement = (Element)scoreList.item(0);

                NodeList textLNList = scoreElement.getChildNodes();
                float score = Float.parseFloat((textLNList.item(0)).getNodeValue().trim());

        
	}
